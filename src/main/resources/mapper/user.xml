<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenco.hobby.repository.interfaces.UserRepository">

	<!-- 회원가입 -->
	<insert id="insert">
		insert into user_tb (email, password, username, nickname, birth, phone, created_at)
		values (#{email}, #{password}, #{username}, #{nickname}, #{birth}, #{phone}, now())
	</insert>

	<!-- 로그인 -->
	<select id="findByEmail" resultType="com.tenco.hobby.repository.model.User">
		select * from user_tb where email = #{email}
	</select>

	<!-- 프로필 변경 시 -->
	<update id="updateAvatar">
		update user_tb set nickname = #{nickname}, origin_file_name = #{originFileName}, upload_file_name = #{uploadFileName} where id = #{id}
	</update>

	<!-- 정보 찾기 -->
	<select id="findById" resultType="com.tenco.hobby.repository.model.User">
		select * from user_tb where id = #{id}
	</select>

	<!-- 회원 정보 변경 시 -->
	<update id="updateUserByEmail">
		update user_tb set username = #{username}, phone = #{phone} where email = #{email}
	</update>

	<!-- 비밀번호 변경 시 -->
	<update id="updatePasswordById">
		update user_tb set password = #{password} where id= #{id}
	</update>

	<!-- 회원 탈퇴 시 -->
	<delete id="deleteByEmail">
		delete from user_tb where email = #{email}
	</delete>

	<!-- 관리자 -->
	<select id="findByAdminEmail" resultType="com.tenco.hobby.repository.model.User">
		select * from user_tb where email = #{email} and user_role = "ADMIN"
	</select>

	<select id="findByAll" resultType="com.tenco.hobby.repository.model.User">
		select * from user_tb
	</select>


</mapper>